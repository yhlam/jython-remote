{"name":"Jython-remote","tagline":"A plugin that provides remote access to running application through jython","body":"JythonRemote\r\n============\r\n\r\nWhat is JythonRemote?\r\n---------------------\r\n\r\nJythonRemote is plugin that provide remote access to running Java application through Jython.\r\n\r\nFor instance, JythonRemote can help you to alter value of static variable during runtime, such that you can change the behavior of application without restarting it.\r\n\r\nRequirements:\r\n-------------\r\n\r\nMaven for building JythonRemote.\r\n\r\nJythonRemote depends on jython-standalone, Maven should grap the jar automatically.\r\n\r\nInstallation:\r\n-------------\r\n\r\nTo build JythonRemote through Maven:\r\n\r\n    mvn install\r\n\r\njython-remote-server.jar and jython-remote-client.jar will be packaged under target directory\r\n\r\nUsage:\r\n------\r\n\r\n### Intergation to your application\r\n\r\nTo intergate JythonRemote to your application, call\r\n\r\n    JythonRemoteServer.singleton().startServer()\r\n\r\nwhen your application is started.\r\n\r\nThe default port of the server is 5518. You may change it by providing the port number you want when you call startServer(). For example,\r\n\r\n    JythonRemoteServer.singleton().startServer(1234)\r\n\r\nYou can also give a local variable maps to JythonRemote through calling\r\n\r\n    JythonRemoteServer.singleton().startServer(locals)\r\n\r\n### Remote accessing JythonRemote\r\n\r\nThere is a command line implementation of JythonRemote client, you can start it with\r\n\r\n    java -jar jython-remote-client-jar-with-dependencies.jar\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}